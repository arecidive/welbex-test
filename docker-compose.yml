version: '3.8'

services:
  web-app:
    build:
      context: .
      dockerfile: src/Dockerfile
    ports:
      - "8000:8000"
    restart: always
    volumes:
      - ./src:/src
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:14.3-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  beat:
    build:
      context: .
      dockerfile: src/Dockerfile
    entrypoint: celery
    command: -A src.celery.app beat -l INFO
    volumes:
      - ./src:/src
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
      - database

  worker:
    build:
      context: .
      dockerfile: src/Dockerfile
    entrypoint: celery
    command: -A src.celery.app worker --loglevel=INFO
    volumes:
      - ./src:/src
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
      - database

volumes:
  pg_data: